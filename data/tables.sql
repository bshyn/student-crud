DROP DATABASE IF EXISTS STUDENT_CRUD;

CREATE DATABASE STUDENT_CRUD;
GO

USE STUDENT_CRUD
GO

CREATE SCHEMA STUDENT_CRUD
GO

CREATE TABLE STUDENT_CRUD.APP_ROLE(
	ID SMALLINT PRIMARY KEY NOT NULL,
	ROLE_NAME VARCHAR(20) NOT NULL
);

CREATE TABLE STUDENT_CRUD.APP_USER(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	USERNAME VARCHAR(20) NOT NULL,
	PASSWORD VARCHAR(200) NOT NULL,
	ACTIVE BIT NOT NULL DEFAULT 1,
	DATE_CREATED DATETIME DEFAULT GETDATE()
);

CREATE NONCLUSTERED INDEX IX_APP_USER_ACTIVE ON STUDENT_CRUD.APP_USER (ACTIVE);
CREATE NONCLUSTERED INDEX IX_APP_USER_USERNAME ON STUDENT_CRUD.APP_USER (USERNAME);

CREATE TABLE STUDENT_CRUD.STUDENT(
	ID INT IDENTITY(1,1) PRIMARY KEY,
	DNI VARCHAR(15) NOT NULL,
	FIRST_NAME VARCHAR(30) NOT NULL,
	LAST_NAME VARCHAR(30) NOT NULL,
	EMAIL VARCHAR(50) NULL,
	MOBILE VARCHAR(20) NOT NULL,

	CONSTRAINT CHK_STUDENT CHECK (
		LEN(DNI) BETWEEN 5 AND 15 AND 
		LEN(FIRST_NAME) < 30 AND 
		LEN(LAST_NAME) < 30 AND 
		(EMAIL = '' OR LEN(EMAIL) BETWEEN 5 AND 50) AND
		LEN(MOBILE) BETWEEN 4 AND 20
	)
)

CREATE TABLE STUDENT_CRUD.USER_ROLE(
	[USER_ID] INT,
	[ROLE_ID] SMALLINT,
	
	CONSTRAINT PK_USER_ROLE PRIMARY KEY ([USER_ID], ROLE_ID),
	CONSTRAINT FK_USER_ROLE_USER FOREIGN KEY ([USER_ID]) REFERENCES STUDENT_CRUD.APP_USER (ID),
	CONSTRAINT FK_USER_ROLE_ROLE FOREIGN KEY (ROLE_ID) REFERENCES STUDENT_CRUD.APP_ROLE (ID)
)
